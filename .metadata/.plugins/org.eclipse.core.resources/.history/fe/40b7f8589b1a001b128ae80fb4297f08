#include "stm32f10x.h"
#include "modbus.h"
#include "GPIO.h"
#include "pwm.h"
#include "adc.h"


#define threshold_U_zpt					200							// порог срабатывания напряжения реле ЗПТ


unsigned short	array_mb[100]			= {};						// массив для хранения принятых/переданных слов

unsigned short	state_machine			= 0;						// переменная состояния системы. выбор алгоритма работмы программы
																	// 0 - ожидает выбор работы от пользователя. работает телеметрия по модбасу.
																	// 1 - переход к выполнению выбранного режима работы.

unsigned short v_threshold_U_zpt;									// переменная, для работы с уровнем напряжения ЗПТ
unsigned short clamp_U_zpt 				= 0;						// защёлка, нужна для исключения отключения реле ЗПТ при просадке напряжения

unsigned short Isens;												// переменные внутреннего пользования. маскируют такие же переменные из сетевого массива
unsigned short U_zpt;
unsigned short Un;
unsigned short Ibreak;



int main(void)
{


	init_GPIO();
    init_modbus();
    //init_pwm_3phase();
    init_pwm_PP_mode();
    init_adc();

    relay_1(off);
    relay_2(off);

    blue_led(off);
    red_led(off);



    array_mb[0] = 0x8000;											// 15 бит - 1. Готов принимать команды пользователя

    array_mb[21] 		= 	threshold_U_zpt;
    v_threshold_U_zpt 	= 	threshold_U_zpt;


	for(;;)
	{

/*
		if((U_zpt < v_threshold_U_zpt) && (clamp_U_zpt == 0))
		{
			array_mb[0] &= ~(0x1000);								// 12 бит - 0. ЗПТ работает не коректно
			array_mb[0] &= ~(0x4000);								// 14 бит - 0. реле ЗПТ разомкнуто.

		    relay_1(off);											//
		}
		else
		{
			array_mb[0] |= 0x1000;									// 12 бит - 1. ЗПТ работает коректно
			array_mb[0] |= 0x4000;									// 14 бит - 1. реле ЗПТ замкнуто.
			clamp_U_zpt = 1;										// защёлкиваем клампер. теперь реле зпт не отключится при просадке напруги. только ресет

			relay_1(on);											// замыкаем реле зпт. Входные фильтры заряжены
		}
*/



		if(array_mb[1] &= 0x4000)									// проверим 14 бит. если 1 - то пользователь решил замкнуть ЗПТ вне зависимости от ситуации
		{
			array_mb[0] |= 0x1000;									// 12 бит - 1. ЗПТ работает коректно
			array_mb[0] |= 0x4000;									// 14 бит - 1. реле ЗПТ замкнуто.

			relay_1(on);
		}
		if(array_mb[1] &= 0x2000)									// проверим 13 бит. если 1 - то пользователь решил разомкнуть ЗПТ нисмотря ни на что)
		{
			array_mb[0] &= ~(0x1000);								// 12 бит - 0. ЗПТ работает не коректно
			array_mb[0] &= ~(0x4000);								// 14 бит - 0. реле ЗПТ разомкнуто.

			relay_1(off);
		}




		switch (state_machine)
		{

			case 0:
			{

				if(array_mb[2] == 1)
				{
					array_mb[2] = 0;
				}


				if(array_mb[2] == 2)
				{
					array_mb[2] = 0;
				}


				if(array_mb[2] == 3)
				{
					array_mb[2] = 0;
				}

			}
			break;

			default:
			break;
		} // скобка свича



		array_mb[8]++;

		Modbus_slave();

	} // скобка бесконечного цикла
} // скобка мейна

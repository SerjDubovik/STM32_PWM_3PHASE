#include "stm32f10x.h"
#include "GPIO.h"


void init_GPIO(void)
{

	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;   // Разрешить тактирование GPIOA
	RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;   // Разрешить тактирование GPIOB
	RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;   // Разрешить тактирование GPIOC
	RCC->APB2ENR |= RCC_APB2ENR_IOPDEN;   // Разрешить тактирование GPIOD
	RCC->APB2ENR |= RCC_APB2ENR_IOPEEN;	  // Разрешить тактирование GPIOE


	//Конфигурирование GPIOC.13	красный светик на плате
	GPIOC->CRH &= ~GPIO_CRH_MODE13;   			// очистить разряды MODE
	GPIOC->CRH &= ~GPIO_CRH_CNF13;    			// очистить разряды CNF
	GPIOC->CRH |=  GPIO_CRH_MODE13;   			// выход, 50MHz
	GPIOC->CRH &= ~GPIO_CRH_CNF13;    			// общего назначения, симметричный


	/////////////////////////
	// Переферия

	  //включаем татирование
	  RCC->APB2ENR |=   RCC_APB2ENR_AFIOEN;                // тактирование альтернативных функций GPIO
	  RCC->APB2ENR |=   RCC_APB2ENR_USART1EN;              // тактирование USART1

	  //конфигурирование PORTA.9 для TX
	  GPIOA->CRH   &= ~(GPIO_CRH_MODE9 | GPIO_CRH_CNF9);   // предочистка MODE и CNF
	  GPIOA->CRH   |=   GPIO_CRH_MODE9 | GPIO_CRH_CNF9_1;  // двухтактный выход с альтернати ф-ей, 50MHz

	  //конфигурирование PORTA.10 для RX
	  GPIOA->CRH   &= ~(GPIO_CRH_MODE10 | GPIO_CRH_CNF10);   // предочистка MODE и CNF
	  GPIOA->CRH   |=   GPIO_CRH_CNF10_0;                   // вход, третье состояние







} // скобочка init_GPIO
